//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Portfolio.Core.Models
{
	// Mixin content Type 1051 with alias "Project"
	/// <summary>Project</summary>
	public partial interface IProject : IPublishedContent
	{
		/// <summary>Detail list</summary>
		Archetype.Models.ArchetypeModel DetailList { get; }

		/// <summary>Featured</summary>
		bool Featured { get; }

		/// <summary>FeaturedImage</summary>
		IEnumerable<IPublishedContent> FeaturedImage { get; }

		/// <summary>HideInNavbar</summary>
		bool HideInNavbar { get; }

		/// <summary>Teaser</summary>
		string Teaser { get; }

		/// <summary>Title</summary>
		string Title { get; }
	}

	/// <summary>Project</summary>
	[PublishedContentModel("Project")]
	public partial class Project : PublishedContentModel, IProject
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Project";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Project(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Project, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Detail list
		///</summary>
		[ImplementPropertyType("detailList")]
		public Archetype.Models.ArchetypeModel DetailList
		{
			get { return GetDetailList(this); }
		}

		/// <summary>Static getter for Detail list</summary>
		public static Archetype.Models.ArchetypeModel GetDetailList(IProject that) { return that.GetPropertyValue<Archetype.Models.ArchetypeModel>("detailList"); }

		///<summary>
		/// Featured
		///</summary>
		[ImplementPropertyType("featured")]
		public bool Featured
		{
			get { return GetFeatured(this); }
		}

		/// <summary>Static getter for Featured</summary>
		public static bool GetFeatured(IProject that) { return that.GetPropertyValue<bool>("featured"); }

		///<summary>
		/// FeaturedImage
		///</summary>
		[ImplementPropertyType("featuredImage")]
		public IEnumerable<IPublishedContent> FeaturedImage
		{
			get { return GetFeaturedImage(this); }
		}

		/// <summary>Static getter for FeaturedImage</summary>
		public static IEnumerable<IPublishedContent> GetFeaturedImage(IProject that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("featuredImage"); }

		///<summary>
		/// HideInNavbar
		///</summary>
		[ImplementPropertyType("hideInNavbar")]
		public bool HideInNavbar
		{
			get { return GetHideInNavbar(this); }
		}

		/// <summary>Static getter for HideInNavbar</summary>
		public static bool GetHideInNavbar(IProject that) { return that.GetPropertyValue<bool>("hideInNavbar"); }

		///<summary>
		/// Teaser
		///</summary>
		[ImplementPropertyType("teaser")]
		public string Teaser
		{
			get { return GetTeaser(this); }
		}

		/// <summary>Static getter for Teaser</summary>
		public static string GetTeaser(IProject that) { return that.GetPropertyValue<string>("teaser"); }

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitle(IProject that) { return that.GetPropertyValue<string>("title"); }
	}
}
